#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
void book_do(char choice)
{
        char isbn[10];
        char FIO[128];
        char Title[128];
        char total[3];
        char avail[3];
        FILE *books = NULL;
        if ((books = fopen("books.csv", "r")) == NULL) {
                printf(":( no books.csv file\n");
                return;
        }
        if (choice == '1') {
                printf("ISBN: ");
                scanf("%s", isbn);
                printf("FIO: ");
                scanf("%s", FIO);
                printf("Title: ");
                scanf("%s", Title);
                printf("Total: ");
                scanf("%s", total);
                printf("Available: ");
                scanf("%s", avail);
                char* line = NULL;
                ssize_t read;
                size_t len = 0;
                int found = 0;
                while ((read = getline(&line, &len, books)) != -1) {
                        char* token = strtok(line, ";");
                        for (int i = 0; token != NULL; i++) {
                                if (i == 0 && strcmp(isbn, token) == 0) {
                                        found = 1;
                                        break;
                                }
                                token = strtok(NULL, ";");
                        }
                        if (found) break;
                }
                if (found) {
                        printf(":( book already exists\n");
                        return;
                }
                fclose(books);
                books = fopen("books.csv", "a");
                fprintf(books, "%s;%s;%s;%s;%s\n", isbn, FIO, Title, total, avail);
                fclose(books);
        } else if (choice == '2') {
                printf("ISBN: ");
                scanf("%s", isbn);
                char* line = NULL;
                ssize_t read;
                size_t len = 0;
                int found = 0;
                while ((read = getline(&line, &len, books)) != -1) {
                        found = 0;
                        char* token = strtok(line, ";");
                        for (int i = 0; token != NULL; i++) {
                                if (i == 0 && strcmp(isbn, token) == 0) {
                                        found = 1;
                                        break;
                                }
                        }
                        if (!found) fprintf(books, "%s;%s;%s;%s;%s", isbn, FIO, Title, total, avail);
                }
                fclose(books);
        } else if (choice == '3') {
                printf("ISBN: ");
                scanf("%s", isbn);
                char* line = NULL;
                ssize_t read;
                size_t len = 0;
                int found = 0;
                while ((read = getline(&line, &len, books)) != -1) {
                        found = 0;
                        char* token = strtok(line, ";");
                        for (int i = 0; token != NULL; i++) {
                                if (i == 0 && strcmp(isbn, token) == 0) {
                                        found = 1;
                                        break;
                                }
                        }
                        if (!found) {
                                avail[1]--;
                                fprintf(books, "%s;%s;%s;%s;%s", isbn, FIO, Title, total, avail);
                        }
                }
                fclose(books);
        } else if (choice == '4') {
                printf("ISBN: ");
                scanf("%s", isbn);
                char* line = NULL;
                ssize_t read;
                size_t len = 0;
                int found = 0;
                while ((read = getline(&line, &len, books)) != -1) {
                        found = 0;
                        char* token = strtok(line, ";");
                        for (int i = 0; token != NULL; i++) {
                                if (i == 0 && strcmp(isbn, token) == 0) {
                                        found = 1;
                                        break;
                                }
                        }
                        if (!found) {
                                avail[1]++;
                                fprintf(books, "%s;%s;%s;%s;%s", isbn, FIO, Title, total, avail);
                        }
                }
                fclose(books);
        } else {
                printf("Wrong choice\n");
        }
}
 
void books()
{
        char choice[1];
        printf("[1] - Add book\n");
        printf("[2] - Delete book\n");
        printf("[3] - Give book by ISBN\n");
        printf("[4] - List all books\n");
        printf("[12] - Exit\n");
        scanf("%s", choice);
        book_do(choice[0]);
}
 
int main() {
        FILE* users;
        if ((users = fopen("users.csv", "r")) == NULL) {
                printf(":( no users.csv file\n");
                return 1;
        }
        char login[16];
        printf("login: ");
        scanf("%s", login);
        char password[16];
        printf("password: ");
        scanf("%s", password);
        char* line = NULL;
        ssize_t read;
        size_t len = 0;
        int found_login = 0;
        int found_password = 0;
        char access_books = 0;
        char access_students = 0;
        while ((read = getline(&line, &len, users)) != -1) {
                char* token = strtok(line, ";");
                for (int i = 0; token != NULL; i++) {
                        if (i == 0) {
                                if (strcmp(token, login) == 0) {
                                        found_login = 1;
                                }
                        } else if (i == 1) {
                                if (strcmp(token, password) == 0) {
                                        found_password = 1;
                                }
                        } else if (i == 2) {
                                access_books = token[0];
                        } else if (i == 3) {
                                access_students = token[0];
                        }
                        token = strtok(NULL, ";");
                }
                if (found_login && found_password) break;
        }
        if (!found_password) {
                if (!found_login)
                        printf("incorrect login!\n");
                else
                        printf("incorrect password!\n");
                return 1;
        }
        if (access_books == '1' && access_students == '1') {
                printf("[1] - Books\n");
                printf("[2] - Students\n");
                char choice[1];
                scanf("%s", (char*)&choice);
                if (choice[0] == '1') {
                        books();
                } else {
                        printf("incorrect choice!\n");
                }
        } else if (access_books == '1') {
                books();
        }
        return 0;
}
